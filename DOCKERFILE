#===========
#Build Stage
#===========
FROM bitwalker/alpine-elixir:latest as build

#Copy the source folder into the Docker image
COPY . .

#Install dependencies and build Release
RUN export MIX_ENV=prod && \
    rm -Rf _build && \
    mix deps.get && \
    mix release

#Extract Release archive to /rel for copying in next stage
RUN APP_NAME="graphql_chat" && \
    RELEASE_DIR=`ls -d _build/prod/rel/$APP_NAME/releases/*/` && \
    mkdir /export && \
    tar -xf "$RELEASE_DIR/$APP_NAME.tar.gz" -C /export

#================
#Deployment Stage
#================
FROM pentacent/alpine-erlang-base:latest

#Set environment variables and expose port
EXPOSE 4000
ENV REPLACE_OS_VARS=true \
    HOST=http://192.168.99.100 \
    PORT=4000

#Copy and extract .tar.gz Release file from the previous stage
COPY --from=build /export/ .

#Change user
USER default

#Set default entrypoint and command
ENTRYPOINT ["/opt/app/bin/graphql_chat"]
CMD ["foreground"]

# https://jmkhael.io/building-and-publishing-a-docker-image/

# FROM elixir:1.6-slim as builder

# RUN apt-get -qq update
# RUN apt-get -qq install git build-essential

# RUN mix local.hex --force && \
#     mix local.rebar --force && \
#     mix hex.info

# WORKDIR /app
# ENV MIX_ENV prod
# ADD . .
# RUN mix deps.get
# RUN mix release --env=$MIX_ENV

# FROM debian:jessie-slim

# ENV DEBIAN_FRONTEND noninteractive
# RUN apt-get -qq update
# RUN apt-get -qq install -y locales

# # Set LOCALE to UTF8
# RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
#     locale-gen en_US.UTF-8 && \
#     dpkg-reconfigure locales && \
#     /usr/sbin/update-locale LANG=en_US.UTF-8
# ENV LC_ALL en_US.UTF-8

# RUN apt-get -qq install libssl1.0.0 libssl-dev
# WORKDIR /app
# COPY --from=builder /app/_build/prod/rel/graphql_chat .

# # CMD ["./bin/graphql_chat", "foreground"]
